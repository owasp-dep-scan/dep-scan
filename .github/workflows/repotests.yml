name: Repo tests Beta

on:
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

jobs:
  os-repo-tests:
    strategy:
      fail-fast: true
      matrix:
      # TODO: Restore all the OS and python versions
        os: ['ubuntu-24.04']
        python-version: ['3.13']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: 'hoolicorp/java-sec-code'
          path: 'repotests/java-sec-code'
      - uses: actions/checkout@v4
        with:
          repository: 'Nova-8/Damm-Vulnerable-dotNet-Application'
          path: 'repotests/Damm-Vulnerable-dotNet-Application'
      - uses: actions/checkout@v4
        with:
          repository: 'TheHackerDev/damn-vulnerable-golang'
          path: 'repotests/damn-vulnerable-golang'
      - uses: actions/checkout@v4
        with:
          repository: 'hardik05/Damn_Vulnerable_C_Program'
          path: 'repotests/Damn_Vulnerable_C_Program'
      - uses: actions/checkout@v4
        with:
          repository: 'wix/greyhound'
          path: 'repotests/greyhound'
          ref: '385bb84a6f712ee18064a3b5ecb8d9dcbc1c75f3'
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'
      - uses: sbt/setup-sbt@v1
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'platform-tools'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.3'
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install depscan
        run: |
          python -m pip install --upgrade pip
          uv sync --all-extras --all-packages --dev
          npm install -g @cyclonedx/cdxgen
      - name: repotests java-sec-code
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code1 ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code2
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/java-sec-code --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code -t java --bom-engine CdxgenGenerator
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/java-sec-code --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code1 --profile research -t java --bom-engine CdxgenGenerator --reachability-analyzer FrameworkReachability
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/java-sec-code --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code2 --profile research -t java --bom-engine CdxgenGenerator --reachability-analyzer SemanticReachability
      # LifeCycleAnalyzer tests
      - name: repotests java-sec-code
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code-lifecycle
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/java-sec-code\
                          --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/java-sec-code-lifecycle\
                          -t java\
                          --vulnerability-analyzer LifecycleAnalyzer\
                          --bom-engine auto
      - name: repotests Damm-Vulnerable-dotNet-Application
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/Damm-Vulnerable-dotNet-Application-lifecycle
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/Damm-Vulnerable-dotNet-Application\
                          --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/Damm-Vulnerable-dotNet-Application\
                          -t dotnet\
                          --vulnerability-analyzer LifecycleAnalyzer\
                          --bom-engine auto
      - name: repotests damn-vulnerable-golang
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/damn-vulnerable-golang-lifecycle
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/damn-vulnerable-golang\
                          --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/damn-vulnerable-golang\
                          -t go\
                          --vulnerability-analyzer LifecycleAnalyzer\
                          --bom-engine auto
      - name: repotests Damn_Vulnerable_C_Program
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/Damn_Vulnerable_C_Program-lifecycle
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/Damn_Vulnerable_C_Program\
                          --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/Damn_Vulnerable_C_Program\
                          -t c\
                          --vulnerability-analyzer LifecycleAnalyzer\
                          --bom-engine auto
        shell: bash
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: repotests greyhound
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/depscan_reports/greyhound
          uv run depscan --src ${GITHUB_WORKSPACE}/repotests/greyhound --reports-dir ${GITHUB_WORKSPACE}/depscan_reports/greyhound -t java --bom-engine CdxgenGenerator
        shell: bash
